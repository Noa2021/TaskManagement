{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\\\\Desktop\\\\TaskManagementApp\\\\TaskManagementApp\\\\task-management-react-app\\\\src\\\\components\\\\AddTask.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskImage: \"\",\n      taskName: \"test\"\n    };\n    this.handleTaskImageChange = this.handleTaskImageChange.bind(this);\n    this.handleTaskNameChange = this.handleTaskNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTaskNameChange(event) {\n    this.setState({\n      taskName: event.target.value,\n      taskImage: this.state.taskImage\n    });\n  }\n\n  handleTaskImageChange(event) {\n    event.preventDefault();\n\n    if (event.target.files.length == 0 && event.target.files[0] == null) {\n      alert(\"Image upload is required\");\n    }\n\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({\n        taskName: this.state.taskName,\n        taskImage: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  handleSubmit(event) {\n    this.addTask();\n    event.preventDefault();\n  }\n\n  addTask() {\n    var request = {\n      NewTask: {\n        taskImage: this.state.taskImage,\n        taskName: this.state.taskName\n      }\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify(request)\n    };\n    fetch('api/TaskManagementApi/AddTask', requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      this.props.onAddTask(request.NewTask);\n    }).catch(error => {\n      //this.setState({ errorMessage: error.toString() });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header h4\",\n          children: \"Create new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body fh-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.taskName,\n              type: \"text\",\n              className: \"form-control\",\n              onChange: this.handleTaskNameChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn\",\n              className: \"btn btn-seconsary\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"files\",\n                children: \"Select Image \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"files\",\n              style: {\n                visibility: 'hidden'\n              },\n              type: \"file\",\n              onChange: this.handleTaskImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"img\",\n              name: \"img\",\n              accept: \"image/*\",\n              style: {\n                visibility: 'hidden'\n              },\n              onChange: this.handleTaskImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.taskImage,\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["C:/Users/משתמש/Desktop/TaskManagementApp/TaskManagementApp/task-management-react-app/src/components/AddTask.tsx"],"names":["React","AddTask","Component","constructor","props","state","taskImage","taskName","handleTaskImageChange","bind","handleTaskNameChange","handleSubmit","event","setState","target","value","preventDefault","files","length","alert","file","reader","FileReader","onloadend","result","readAsDataURL","addTask","request","NewTask","requestOptions","method","headers","mode","body","JSON","stringify","fetch","then","response","data","json","ok","error","message","status","Promise","reject","onAddTask","catch","console","render","visibility"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { TaskDetails, Request } from '../entities/TaskManagmentEntities';\r\ninterface IProps {\r\n    onAddTask: (task: TaskDetails) => void;\r\n}\r\n\r\ninterface IState {\r\n    taskName: string,\r\n    taskImage: string\r\n}\r\n\r\nclass AddTask extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            taskImage: \"\",\r\n            taskName: \"test\"\r\n        }\r\n\r\n        this.handleTaskImageChange = this.handleTaskImageChange.bind(this);\r\n        this.handleTaskNameChange = this.handleTaskNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleTaskNameChange(event: any) {\r\n        this.setState({\r\n            taskName: event.target.value,\r\n            taskImage: this.state.taskImage\r\n        });\r\n    }\r\n\r\n    handleTaskImageChange(event: any) {\r\n        event.preventDefault();\r\n\r\n        if (event.target.files.length == 0 && event.target.files[0] == null) {\r\n            alert(\"Image upload is required\");\r\n        }\r\n\r\n        let file: Blob = event.target.files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                taskName: this.state.taskName,\r\n                taskImage: reader.result as string\r\n            });\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    handleSubmit(event: { preventDefault: () => void; }) {\r\n        this.addTask();\r\n        event.preventDefault();\r\n    }\r\n\r\n    addTask() {\r\n        var request: Request.AddTask = {\r\n            NewTask: {\r\n                taskImage: this.state.taskImage,\r\n                taskName: this.state.taskName\r\n            }\r\n        };\r\n\r\n        const requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            mode: 'cors',\r\n            body: JSON.stringify(request)\r\n        };\r\n        fetch('api/TaskManagementApi/AddTask', requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n\r\n                this.props.onAddTask(request.NewTask);\r\n            })\r\n            .catch(error => {\r\n                //this.setState({ errorMessage: error.toString() });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header h4\">\r\n                        Create new task\r\n                </div>\r\n                    <div className=\"card-body fh-card-body\">\r\n                        <div className=\"form-group\">\r\n                            <label>Task name</label>\r\n                            <input value={this.state.taskName} type=\"text\" className=\"form-control\" onChange={this.handleTaskNameChange} required />\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"button\" className=\"btn\" className=\"btn btn-seconsary\">\r\n                                <label htmlFor=\"files\">Select Image </label>\r\n                                    </button>\r\n                            <input id=\"files\" style={{ visibility: 'hidden' }} type=\"file\" onChange={this.handleTaskImageChange}/>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"form-group\">\r\n                            <input type=\"file\" id=\"img\" name=\"img\" accept=\"image/*\" style={{ visibility: 'hidden' }} onChange={this.handleTaskImageChange} />\r\n                        </div>\r\n                        <img src={this.state.taskImage} width=\"100%\" />\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Add task</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default AddTask"]},"metadata":{},"sourceType":"module"}