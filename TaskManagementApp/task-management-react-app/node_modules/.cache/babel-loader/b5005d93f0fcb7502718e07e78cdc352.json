{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\\\\Desktop\\\\TaskManagementApp\\\\TaskManagementApp\\\\task-management-react-app\\\\src\\\\components\\\\TasksList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      tasks: []\n    };\n  }\n\n  loadTasks() {\n    fetch(\"api/TaskManagementApi/GetTasks\").then(res => res.json()).then(result => {\n      debugger;\n      this.setState({\n        isLoaded: true,\n        tasks: result.Tasks\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [\"this.state.tasks?(\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.tasks.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 36\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 39\n        }, this), \"): null;\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.loadTasks,\n          children: \"Load tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/משתמש/Desktop/TaskManagementApp/TaskManagementApp/task-management-react-app/src/components/TasksList.tsx"],"names":["React","TaskList","Component","constructor","props","state","error","isLoaded","tasks","loadTasks","fetch","then","res","json","result","setState","Tasks","render","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAUA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuD;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAA2B;AAClC,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,SAAS,GAAG;AACRC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AAAC;AACT,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVC,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFJ,OAAd;AAIH,KART,EASQ;AACA;AACA;AACCV,IAAAA,KAAD,IAAW;AACP,WAAKS,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA;AAFU,OAAd;AAIH,KAjBT;AAmBH;;AAEDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,sDACsB;AAAA,oBACb,KAAKZ,KAAL,CAAWG,KAAX,CAAiBU,GAAjB,CAAqB,UAAUC,IAAV,EAAgB;AAClC,gCAAO;AAAA,wBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,oBAAP;AACH,WAFA;AADa;AAAA;AAAA;AAAA;AAAA,gBADtB;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,OAAO,EAAE,KAAKV,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAhDkD;;AAkDvD,eAAeR,QAAf","sourcesContent":["import React from 'react';\r\nimport { TaskDetails } from '../entities/TaskManagmentEntities';\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n    error: string | null,\r\n    isLoaded: boolean,\r\n    tasks: TaskDetails[]\r\n}\r\nclass TaskList extends React.Component<IProps, IState> {\r\n    constructor(props: {} | Readonly<{}>) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            tasks: []\r\n        };\r\n    }\r\n\r\n    loadTasks() {\r\n        fetch(\"api/TaskManagementApi/GetTasks\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {debugger\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        tasks: result.Tasks\r\n                    });\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    this.state.tasks?(<div>\r\n                        {this.state.tasks.map(function (item) {\r\n                            return <div>{item}</div>\r\n                        })\r\n                        }\r\n                    </div>): null;\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.loadTasks}>Load tasks</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TaskList"]},"metadata":{},"sourceType":"module"}