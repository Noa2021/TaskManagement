{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\\\\Desktop\\\\TaskManagementApp\\\\TaskManagementApp\\\\task-management-react-app\\\\src\\\\components\\\\AddTask.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskImage: \"\",\n      taskName: \"test\"\n    };\n    this.handleTaskImageChange = this.handleTaskImageChange.bind(this);\n    this.handleTaskNameChange = this.handleTaskNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTaskNameChange(event) {\n    this.setState({\n      taskName: event.target.value,\n      taskImage: this.state.taskImage\n    });\n  }\n\n  handleTaskImageChange(event) {\n    event.preventDefault();\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      if (reader.result == null || reader.result instanceof ArrayBuffer) alert(\"fail\");\n      debugger;\n      this.setState({\n        taskName: this.state.taskName,\n        taskImage: String(reader.result)\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  handleSubmit(event) {\n    this.addTask();\n    event.preventDefault();\n  }\n\n  addTask() {\n    var request = {\n      NewTask: {\n        taskImage: this.state.taskImage,\n        taskName: this.state.taskName\n      }\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify(request)\n    };\n    fetch('api/TaskManagementApi/AddTask', requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      } //    this.setState({ postId: data.id })\n\n    }).catch(error => {\n      //this.setState({ errorMessage: error.toString() });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header h4\",\n          children: \"Create new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.taskName,\n              type: \"text\",\n              className: \"form-control\",\n              onChange: this.handleTaskNameChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"files\",\n              type: \"file\",\n              onChange: this.handleTaskImageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.taskImage,\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["C:/Users/משתמש/Desktop/TaskManagementApp/TaskManagementApp/task-management-react-app/src/components/AddTask.tsx"],"names":["React","AddTask","Component","constructor","props","state","taskImage","taskName","handleTaskImageChange","bind","handleTaskNameChange","handleSubmit","event","setState","target","value","preventDefault","file","files","reader","FileReader","onloadend","result","ArrayBuffer","alert","String","readAsDataURL","addTask","request","NewTask","requestOptions","method","headers","mode","body","JSON","stringify","fetch","then","response","data","json","ok","error","message","status","Promise","reject","catch","console","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { TaskDetails, Request } from '../entities/TaskManagmentEntities';\r\ninterface IProps {\r\n}\r\n\r\ninterface IState {\r\n    taskName: string,\r\n    taskImage: string\r\n}\r\n\r\nclass AddTask extends React.Component<IProps, IState> {\r\n    constructor(props: {} | Readonly<{}>) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            taskImage: \"\",\r\n            taskName: \"test\"\r\n        }\r\n\r\n        this.handleTaskImageChange = this.handleTaskImageChange.bind(this);\r\n        this.handleTaskNameChange = this.handleTaskNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleTaskNameChange(event: any) {\r\n        this.setState({\r\n            taskName: event.target.value,\r\n            taskImage: this.state.taskImage\r\n        });\r\n    }\r\n\r\n    handleTaskImageChange(event: any) {\r\n        event.preventDefault();\r\n\r\n        let file: Blob = event.target.files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            if (reader.result == null || reader.result instanceof ArrayBuffer) alert(\"fail\");\r\n            debugger\r\n            this.setState({\r\n                taskName: this.state.taskName,\r\n                taskImage: String(reader.result)\r\n            });\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    handleSubmit(event: { preventDefault: () => void; }) {\r\n        this.addTask();\r\n        event.preventDefault();\r\n    }\r\n\r\n    addTask() {\r\n        var request: Request.AddTask = {\r\n            NewTask: {\r\n                taskImage: this.state.taskImage,\r\n                taskName: this.state.taskName\r\n            }\r\n        };\r\n\r\n        const requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            mode: 'cors',\r\n            body: JSON.stringify(request)\r\n        };\r\n        fetch('api/TaskManagementApi/AddTask', requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n\r\n                //    this.setState({ postId: data.id })\r\n            })\r\n            .catch(error => {\r\n                //this.setState({ errorMessage: error.toString() });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header h4\">\r\n                        Create new task\r\n                </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <label>Task name</label>\r\n                            <input value={this.state.taskName} type=\"text\" className=\"form-control\" onChange={this.handleTaskNameChange} required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input id=\"files\" type=\"file\"  onChange={this.handleTaskImageChange} />\r\n                        </div>\r\n                        <img src={this.state.taskImage} width=\"100%\" />\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Add task</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default AddTask"]},"metadata":{},"sourceType":"module"}