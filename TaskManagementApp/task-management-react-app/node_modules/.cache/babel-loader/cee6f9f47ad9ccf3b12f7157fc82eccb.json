{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\\\\Desktop\\\\TaskManagementApp\\\\TaskManagementApp\\\\task-management-react-app\\\\src\\\\components\\\\AddTask.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskImage: \"\",\n      taskName: \"test\",\n      imageName: \"\"\n    };\n    this.handleTaskImageChange = this.handleTaskImageChange.bind(this);\n    this.handleTaskNameChange = this.handleTaskNameChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleTaskNameChange(event) {\n    this.setState({\n      taskName: event.target.value,\n      taskImage: this.state.taskImage\n    });\n  }\n\n  handleTaskImageChange(event) {\n    event.preventDefault();\n    debugger; //if (!event.target.files || event.target.files.length == 0 || event.target.files[0] == null) {\n    //    alert(\"Image upload is required\");\n    //}\n\n    let file = event.target.files[0];\n    let reader = new FileReader();\n\n    reader.onloadend = () => {\n      this.setState({\n        taskName: this.state.taskName,\n        taskImage: reader.result,\n        imageName: event.target.value\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  handleSubmit(event) {\n    this.addTask();\n    event.preventDefault();\n  }\n\n  clearForm() {\n    this.setState({\n      taskName: \"\",\n      taskImage: \"\",\n      imageName: \"\"\n    });\n  }\n\n  addTask() {\n    var request = {\n      NewTask: {\n        taskImage: this.state.taskImage,\n        taskName: this.state.taskName\n      }\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    };\n    fetch('api/TaskManagementApi/AddTask', requestOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        alert('There was an error!');\n      }\n    }).then(response => {\n      this.props.onAddTask(request.NewTask);\n      this.clearForm();\n    }).catch(error => {\n      alert('There was an error!');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header h4\",\n          children: \"Create new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body fh-card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: this.state.taskName,\n              type: \"text\",\n              className: \"form-control\",\n              onChange: this.handleTaskNameChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            id: \"file-upload\",\n            onChange: this.handleTaskImageChange,\n            accept: \"image/*\",\n            className: \"d-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n            htmlFor: \"file-upload\",\n            className: \"underline clickable\",\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: this.state.imageName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.taskImage,\n            className: \"pt-3\",\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["C:/Users/משתמש/Desktop/TaskManagementApp/TaskManagementApp/task-management-react-app/src/components/AddTask.tsx"],"names":["React","AddTask","Component","constructor","props","state","taskImage","taskName","imageName","handleTaskImageChange","bind","handleTaskNameChange","handleSubmit","event","setState","target","value","preventDefault","file","files","reader","FileReader","onloadend","result","readAsDataURL","addTask","clearForm","request","NewTask","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","json","alert","onAddTask","catch","error","render"],"mappings":"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","sourcesContent":["import { read } from 'fs';\r\nimport  React, { useRef } from 'react';\r\nimport { TaskDetails, Request, Response } from '../entities/TaskManagmentEntities';\r\ninterface IProps {\r\n    onAddTask: (task: TaskDetails) => void;\r\n}\r\n\r\ninterface IState {\r\n    taskName: string,\r\n    taskImage: string,\r\n    imageName: string\r\n}\r\n\r\nclass AddTask extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            taskImage: \"\",\r\n            taskName: \"test\",\r\n            imageName: \"\"\r\n        }\r\n\r\n        this.handleTaskImageChange = this.handleTaskImageChange.bind(this);\r\n        this.handleTaskNameChange = this.handleTaskNameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleTaskNameChange(event: any) {\r\n        this.setState({\r\n            taskName: event.target.value,\r\n            taskImage: this.state.taskImage\r\n        });\r\n    }\r\n\r\n    handleTaskImageChange(event: any) {\r\n        event.preventDefault();\r\n        debugger\r\n        //if (!event.target.files || event.target.files.length == 0 || event.target.files[0] == null) {\r\n        //    alert(\"Image upload is required\");\r\n        //}\r\n\r\n        let file = event.target.files[0];\r\n        let reader = new FileReader();\r\n\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                taskName: this.state.taskName,\r\n                taskImage: reader.result as string,\r\n                imageName: event.target.value\r\n            });\r\n        }\r\n\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    handleSubmit(event: { preventDefault: () => void; }) {\r\n        this.addTask();\r\n        event.preventDefault();\r\n    }\r\n\r\n    clearForm() {\r\n        this.setState({\r\n            taskName: \"\",\r\n            taskImage: \"\",\r\n            imageName: \"\"\r\n        });\r\n    }\r\n\r\n    addTask() {\r\n        var request: Request.AddTask = {\r\n            NewTask: {\r\n                taskImage: this.state.taskImage,\r\n                taskName: this.state.taskName\r\n            }\r\n        };\r\n\r\n        const requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(request)\r\n        };\r\n\r\n        fetch('api/TaskManagementApi/AddTask', requestOptions).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                alert('There was an error!');\r\n            }\r\n        })\r\n            .then((response: Response.AddTask) => {\r\n                this.props.onAddTask(request.NewTask);\r\n                this.clearForm();\r\n            })\r\n            .catch((error) => {\r\n                alert('There was an error!');\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header h4\">\r\n                        Create new task\r\n                    </div>\r\n                    <div className=\"card-body fh-card-body\">\r\n                        <div className=\"form-group\">\r\n                            <label>Task name</label>\r\n                            <input value={this.state.taskName} type=\"text\" className=\"form-control\" onChange={this.handleTaskNameChange} required />\r\n                        </div>\r\n\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            id=\"file-upload\"\r\n                            onChange={this.handleTaskImageChange}\r\n                            accept=\"image/*\"\r\n                            className=\"d-none\"/>\r\n                        \r\n                            <link htmlFor=\"file-upload\" className=\"underline clickable\">\r\n                                Upload Image\r\n                             </link>\r\n                        <div className=\"pt-2\">\r\n                        <label>{this.state.imageName}</label>\r\n                        </div>\r\n                        <img src={this.state.taskImage} className=\"pt-3\" width=\"100%\" />\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Add task</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\nexport default AddTask"]},"metadata":{},"sourceType":"module"}