{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\\\\Desktop\\\\TaskManagementApp\\\\TaskManagementApp\\\\task-management-react-app\\\\src\\\\components\\\\AddTask.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    var state = {\n      TaskImage: \"\",\n      TaskName: \"test\"\n    };\n    this.state = state;\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    this.addTask;\n    event.preventDefault();\n  }\n\n  addTask() {\n    debugger;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        NewTask: {\n          TaskName: 'noa',\n          TaskImage: '555'\n        }\n      })\n    };\n    fetch('api/TaskManagementApi/AddTask', requestOptions).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        postId: data.id\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header h4\",\n          children: \"Create new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Task name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"files\",\n              className: \"btn\",\n              children: \"Upload image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"files\",\n              style: {\n                visibility: 'hidden'\n              },\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            onClick: this.addTask,\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["C:/Users/משתמש/Desktop/TaskManagementApp/TaskManagementApp/task-management-react-app/src/components/AddTask.tsx"],"names":["React","AddTask","Component","constructor","props","state","TaskImage","TaskName","handleChange","bind","handleSubmit","event","setState","value","target","addTask","preventDefault","requestOptions","method","headers","mode","body","JSON","stringify","NewTask","fetch","then","response","data","json","ok","error","message","status","Promise","reject","postId","id","catch","errorMessage","toString","console","render","visibility"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { TaskDetails } from '../entities/TaskManagmentEntities';\r\n\r\nclass AddTask extends React.Component {\r\n    constructor(props: {} | Readonly<{}>) {\r\n        super(props);\r\n\r\n        var state: TaskDetails = {\r\n            TaskImage: \"\",\r\n            TaskName: \"test\"\r\n        };\r\n\r\n        this.state = state;\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event: { target: { value: any; }; }) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    handleSubmit(event: { preventDefault: () => void; }) {\r\n        this.addTask;\r\n        event.preventDefault();\r\n    }\r\n\r\n    addTask() {\r\n        debugger\r\n        const requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            mode: 'cors',\r\n            body: JSON.stringify({ NewTask: { TaskName: 'noa', TaskImage: '555' } })\r\n        };\r\n        fetch('api/TaskManagementApi/AddTask', requestOptions)\r\n            .then(async response => {\r\n                const data = await response.json();\r\n\r\n                // check for error response\r\n                if (!response.ok) {\r\n                    // get error message from body or default to response status\r\n                    const error = (data && data.message) || response.status;\r\n                    return Promise.reject(error);\r\n                }\r\n\r\n                this.setState({ postId: data.id })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ errorMessage: error.toString() });\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header h4\">\r\n                        Create new task\r\n                </div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                            <label>Task name</label>\r\n                            <input type=\"text\" className=\"form-control\" />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"files\" className=\"btn\">Upload image</label>\r\n                            <input id=\"files\" style={{ visibility: 'hidden' }} type=\"file\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-footer\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\" onClick={this.addTask}>Add task</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        );\r\n    }\r\n}\r\nexport default AddTask"]},"metadata":{},"sourceType":"module"}