{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05DE\\u05E9\\u05EA\\u05DE\\u05E9\\\\Desktop\\\\TaskManagementApp\\\\TaskManagementApp\\\\task-management-react-app\\\\src\\\\components\\\\TasksList.tsx\";\nimport React from 'react';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false\n    };\n  }\n\n  loadTasks() {\n    var request = {};\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(request)\n    };\n    fetch('api/TaskManagementApi/GetTasks', requestOptions).then(response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        console.error('There was an error!');\n      }\n    }).then(response => {\n      this.props.onLoad(response.tasks);\n    }).catch(error => {\n      console.error('There was an error!', error);\n    });\n  }\n\n  getTasksListView() {\n    if (this.state.isLoaded) {\n      if (this.props.tasks && this.props.tasks.length > 0) {\n        return this.props.tasks.map((task, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pb-2\",\n            children: /*#__PURE__*/_jsxDEV(TaskItem, {\n              task: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }, this);\n        });\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: \"No tasks found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 24\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n  render() {\n    var tasksList = this.getTasksListView();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header h4\",\n        children: \"Tasks list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body fh-card-body\",\n        children: tasksList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: this.loadTasks.bind(this),\n          children: \"Load tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/משתמש/Desktop/TaskManagementApp/TaskManagementApp/task-management-react-app/src/components/TasksList.tsx"],"names":["React","TaskItem","TaskList","Component","constructor","props","state","isLoaded","loadTasks","request","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","json","console","error","onLoad","tasks","catch","getTasksListView","length","map","task","index","render","tasksList","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,YAArB;;;AAWA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuD;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAgB;AACvB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AAEDC,EAAAA,SAAS,GAAG;AACR,QAAIC,OAAyB,GAAG,EAAhC;AAEA,UAAMC,cAA2B,GAAG;AAChCC,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFuB;AAGhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAH0B,KAApC;AAMAO,IAAAA,KAAK,CAAC,gCAAD,EAAmCN,cAAnC,CAAL,CAAwDO,IAAxD,CAA8DC,QAAD,IAAc;AACvE,UAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,eAAOD,QAAQ,CAACE,IAAT,EAAP;AACH,OAFD,MAEO;AACHC,QAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd;AACH;AACJ,KAND,EAOKL,IAPL,CAOWC,QAAD,IAAiC;AACnC,WAAKb,KAAL,CAAWkB,MAAX,CAAkBL,QAAQ,CAACM,KAA3B;AACH,KATL,EAUKC,KAVL,CAUYH,KAAD,IAAW;AACdD,MAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAZL;AAaH;;AAEDI,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKpB,KAAL,CAAWC,QAAf,EAAyB;AACrB,UAAI,KAAKF,KAAL,CAAWmB,KAAX,IAAoB,KAAKnB,KAAL,CAAWmB,KAAX,CAAiBG,MAAjB,GAA0B,CAAlD,EAAqD;AACjD,eAAO,KAAKtB,KAAL,CAAWmB,KAAX,CAAiBI,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,8BAAO;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACH,QAAC,QAAD;AAAU,cAAA,IAAI,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA;AADG,aAA2BC,KAA3B;AAAA;AAAA;AAAA;AAAA,kBAAP;AAGH,SAJM,CAAP;AAKH,OAND,MAOK;AACD,4BAAO;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH;AACJ,KAXD,MAYK;AACD,0BAAO;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,SAAS,GAAG,KAAKN,gBAAL,EAAhB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,kBACKM;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,iBAAhC;AAAkD,UAAA,OAAO,EAAE,KAAKxB,SAAL,CAAeyB,IAAf,CAAoB,IAApB,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAnEkD;;AAqEvD,eAAe/B,QAAf","sourcesContent":["import React from 'react';\r\nimport { TaskDetails, Response, Request } from '../entities/TaskManagmentEntities';\r\nimport TaskItem from './TaskItem';\r\n\r\ninterface IProps {\r\n    tasks: TaskDetails[],\r\n    onLoad: (tasks: TaskDetails[]) => void;\r\n}\r\n\r\ninterface IState {\r\n    isLoaded: boolean,\r\n}\r\n\r\nclass TaskList extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            isLoaded: false,\r\n        };\r\n    }\r\n\r\n    loadTasks() {\r\n        var request: Request.GetTasks = {}; \r\n        \r\n        const requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(request)\r\n        };\r\n\r\n        fetch('api/TaskManagementApi/GetTasks', requestOptions).then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                console.error('There was an error!');\r\n            }\r\n        })\r\n            .then((response: Response.GetTasks) => {\r\n                this.props.onLoad(response.tasks);\r\n            })\r\n            .catch((error) => {\r\n                console.error('There was an error!', error);\r\n            });\r\n    }\r\n\r\n    getTasksListView() {\r\n        if (this.state.isLoaded) {\r\n            if (this.props.tasks && this.props.tasks.length > 0) {\r\n                return this.props.tasks.map((task, index) => {\r\n                    return <div className=\"pb-2\" key={index}>\r\n                        <TaskItem task={task}></TaskItem>\r\n                    </div>\r\n                })\r\n            }\r\n            else {\r\n                return <div className=\"text-center\">No tasks found</div>;\r\n            }\r\n        }\r\n        else {\r\n            return <div className=\"text-center\">Loading...</div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var tasksList = this.getTasksListView()\r\n\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header h4\">\r\n                    Tasks list\r\n                </div>\r\n                <div className=\"card-body fh-card-body\">\r\n                    {tasksList}\r\n                </div>\r\n\r\n                <div className=\"card-footer\">\r\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.loadTasks.bind(this)}>Load tasks</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TaskList"]},"metadata":{},"sourceType":"module"}